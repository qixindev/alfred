definitions:
  admin.ModifyPassword:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    type: object
  dto.AccessTokenDto:
    properties:
      access_token:
        type: string
    type: object
  dto.ProviderDto:
    properties:
      id:
        type: integer
      name:
        type: string
      type:
        type: string
    type: object
  dto.UserAdminDto:
    properties:
      disabled:
        type: boolean
      displayName:
        type: string
      email:
        type: string
      emailVerified:
        type: boolean
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      passwordHash:
        type: string
      phone:
        type: string
      phoneVerified:
        type: boolean
      twoFactorEnabled:
        type: boolean
      username:
        type: string
    type: object
  dto.UserDto:
    properties:
      avatar:
        type: string
      disabled:
        type: boolean
      displayName:
        type: string
      email:
        type: string
      emailVerified:
        type: boolean
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      phone:
        type: string
      phoneVerified:
        type: boolean
      sub:
        type: string
      twoFactorEnabled:
        type: boolean
      username:
        type: string
    type: object
  dto.UserProfileDto:
    properties:
      displayName:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  model.Client:
    properties:
      id:
        type: string
      name:
        type: string
      tenant:
        $ref: '#/definitions/model.Tenant'
      tenantId:
        type: integer
    type: object
  model.ClientUser:
    properties:
      client:
        $ref: '#/definitions/model.Client'
      clientId:
        type: string
      email:
        type: string
      id:
        type: integer
      phone:
        type: string
      sub:
        type: string
      tenantId:
        type: integer
      user:
        $ref: '#/definitions/model.User'
      userId:
        type: integer
      userName:
        type: string
    type: object
  model.RequestResourceGroup:
    properties:
      actionIds:
        items:
          type: string
        type: array
      description:
        type: string
      name:
        type: string
      roleId:
        type: string
      uid:
        type: string
    type: object
  model.Resource:
    properties:
      id:
        type: string
      name:
        type: string
      parent:
        type: string
      tenantId:
        type: integer
      typeId:
        type: string
    type: object
  model.ResourceRoleUser:
    properties:
      displayName:
        type: string
      id:
        type: integer
      resource:
        $ref: '#/definitions/model.Resource'
      resourceId:
        type: string
      resourceName:
        type: string
      role:
        $ref: '#/definitions/model.ResourceTypeRole'
      roleId:
        type: string
      roleName:
        type: string
      sub:
        type: string
      tenantId:
        type: integer
      user:
        $ref: '#/definitions/model.ClientUser'
      userId:
        type: integer
    type: object
  model.ResourceType:
    properties:
      clientId:
        type: string
      id:
        type: string
      name:
        type: string
      tenantId:
        type: integer
    type: object
  model.ResourceTypeAction:
    properties:
      id:
        type: string
      name:
        type: string
      tenantId:
        type: integer
      typeId:
        type: string
    type: object
  model.ResourceTypeRole:
    properties:
      id:
        type: string
      name:
        type: string
      tenantId:
        type: integer
      typeId:
        type: string
    type: object
  model.ResourceTypeRoleAction:
    properties:
      actionId:
        type: string
      actionName:
        type: string
      id:
        type: integer
      roleId:
        type: string
      roleName:
        type: string
      tenantId:
        type: integer
    type: object
  model.SendInfo:
    properties:
      id:
        type: integer
      isRead:
        type: boolean
      link:
        description: 点击跳转链接
        type: string
      msg:
        description: 要发送的消息
        type: string
      msgType:
        description: 消息类型：图文，markdown，文字
        type: string
      platform:
        description: 发送到哪个平台
        type: string
      pngLink:
        description: 消息图片链接
        type: string
      receiverName:
        description: 接收者名字
        type: string
      sendAt:
        description: 发送时间
        type: string
      sender:
        description: 发送者
        type: string
      senderName:
        description: 发送者名字
        type: string
      title:
        description: 标题
        type: string
      titleColor:
        description: 标题颜色
        type: string
      users:
        description: 发送给谁，使用字符串数组存储
        items:
          type: string
        type: array
      usersDB:
        description: 发送给谁，使用字符串数组存储
        type: string
    type: object
  model.Tenant:
    properties:
      id:
        type: integer
      loginPage:
        type: string
      name:
        type: string
      proto:
        type: string
      role:
        type: string
      sub:
        type: string
    type: object
  model.User:
    properties:
      avatar:
        type: string
      disabled:
        type: boolean
      displayName:
        type: string
      email:
        type: string
      emailVerified:
        type: boolean
      firstName:
        type: string
      from:
        type: string
      id:
        type: integer
      lastName:
        type: string
      meta:
        type: string
      passwordHash:
        type: string
      phone:
        type: string
      phoneVerified:
        type: boolean
      role:
        type: string
      sub:
        type: string
      tenantId:
        type: integer
      twoFactorEnabled:
        type: boolean
      username:
        type: string
    type: object
  req.Sms:
    properties:
      accessKeyId:
        type: string
      accessKeySecret:
        type: string
      endpoint:
        type: string
      id:
        type: integer
      name:
        type: string
      region:
        type: string
      regionId:
        type: string
      sdkAppId:
        type: string
      secretId:
        type: string
      secretKey:
        type: string
      signName:
        type: string
      templateCode:
        type: string
      templateId:
        type: string
      type:
        type: string
    type: object
info:
  contact: {}
paths:
  /accounts/{tenant}/.well-known/jwks.json:
    get:
      parameters:
      - description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: jwk
      tags:
      - oauth2
  /accounts/{tenant}/.well-known/openid-configuration:
    get:
      parameters:
      - description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: openid configuration
      tags:
      - oauth2
  /accounts/{tenant}/iam/clients/{client}/resourceGroups:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组列表
      tags:
      - resource-group
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: body
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 创建资源组
      tags:
      - resource-group
  /accounts/{tenant}/iam/clients/{client}/resourceGroups/{groupId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 删除资源组
      tags:
      - resource-group
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组详细信息
      tags:
      - resource-group
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: body
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 更新资源组
      tags:
      - resource-group
  /accounts/{tenant}/iam/clients/{client}/resourceGroups/{groupId}/actions:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组角色列表
      tags:
      - resource-group
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: body
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 创建资源角色
      tags:
      - resource-group
  /accounts/{tenant}/iam/clients/{client}/resourceGroups/{groupId}/actions/{actionId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: action id
        in: path
        name: actionId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 删除资源组角色
      tags:
      - resource-group
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: action id
        in: path
        name: actionId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组角色
      tags:
      - resource-group
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: action id
        in: path
        name: actionId
        required: true
        type: string
      - description: body
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 更新资源组角色
      tags:
      - resource-group
  /accounts/{tenant}/iam/clients/{client}/resourceGroups/{groupId}/resources:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组的资源列表
      tags:
      - resource-group
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 创建资源的资源
      tags:
      - resource-group
  /accounts/{tenant}/iam/clients/{client}/resourceGroups/{groupId}/resources/{resourceId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 删除资源组的资源
      tags:
      - resource-group
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组的资源
      tags:
      - resource-group
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: resource id
        in: path
        name: resourceId
        required: true
        type: string
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 更新资源组的资源
      tags:
      - resource-group
  /accounts/{tenant}/iam/clients/{client}/resourceGroups/{groupId}/roles:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组角色列表
      tags:
      - resource-group
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 创建资源角色
      tags:
      - resource-group
  /accounts/{tenant}/iam/clients/{client}/resourceGroups/{groupId}/roles/{roleId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 删除资源组角色
      tags:
      - resource-group
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组角色
      tags:
      - resource-group
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 更新资源组角色
      tags:
      - resource-group
  /accounts/{tenant}/iam/clients/{client}/resourceGroups/{groupId}/roles/{roleId}/actions:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 删除资源组角色
      tags:
      - resource-group
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组角色列表
      tags:
      - resource-group
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 创建资源角色
      tags:
      - resource-group
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 更新资源组角色
      tags:
      - resource-group
  /accounts/{tenant}/iam/clients/{client}/resourceGroups/{groupId}/roles/{roleId}/actions/{actionsId}:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      - description: action id
        in: path
        name: actionId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源组角色
      tags:
      - resource-group
  /accounts/{tenant}/iam/clients/{client}/resourceGroups/{groupId}/users/{userId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: 踢出用户
      tags:
      - resource-group
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: integer
      - description: body
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 将用户拉入组内
      tags:
      - resource-group
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: integer
      - description: body
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/model.RequestResourceGroup'
      responses:
        "200":
          description: OK
      summary: 修改用户在组内的角色
      tags:
      - resource-group
  /accounts/{tenant}/iam/clients/{client}/resourceGroups/{groupId}/users/{userId}/actions:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: 用户在组内所拥有的权限列表
      tags:
      - resource-group
  /accounts/{tenant}/iam/clients/{client}/resourceGroups/{groupId}/users/{userId}/actions/{actionId}:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      - description: action id
        in: path
        name: actionId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 用户在组内是否拥有某个权限
      tags:
      - resource-group
  /accounts/{tenant}/iam/clients/{client}/resourceGroups/{groupId}/users/{userId}/roles:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: group id
        in: path
        name: groupId
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: 用户在组内的角色
      tags:
      - resource-group
  /accounts/{tenant}/iam/clients/{client}/types:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源类型列表
      tags:
      - iam-resource
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: body
        name: iamBody
        required: true
        schema:
          $ref: '#/definitions/model.ResourceType'
      responses:
        "200":
          description: OK
      summary: new iam resource type
      tags:
      - iam-resource
  /accounts/{tenant}/iam/clients/{client}/types/{typeId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete iam resource type
      tags:
      - iam-resource
  /accounts/{tenant}/iam/clients/{client}/types/{typeId}/actions:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取操作列表
      tags:
      - iam-action
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      - description: tenant
        in: body
        name: iamBody
        required: true
        schema:
          items:
            $ref: '#/definitions/model.ResourceTypeAction'
          type: array
      responses:
        "200":
          description: OK
      summary: new iam action
      tags:
      - iam-action
  /accounts/{tenant}/iam/clients/{client}/types/{typeId}/actions/{actionId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      - description: tenant
        in: path
        name: actionId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete iam action
      tags:
      - iam-action
  /accounts/{tenant}/iam/clients/{client}/types/{typeId}/actions/{actionId}/users/{user}/resources:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: type id
        in: path
        name: typeId
        required: true
        type: string
      - description: action id
        in: path
        name: actionId
        required: true
        type: string
      - description: user sub id
        in: path
        name: user
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 用户获取拥有某个操作的所有资源列表
      tags:
      - iam-action
  /accounts/{tenant}/iam/clients/{client}/types/{typeId}/resources:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取资源列表
      tags:
      - iam-resource
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      - description: tenant
        in: body
        name: iamBody
        required: true
        schema:
          $ref: '#/definitions/model.Resource'
      responses:
        "200":
          description: OK
      summary: new iam resource
      tags:
      - iam-resource
  /accounts/{tenant}/iam/clients/{client}/types/{typeId}/resources/{resourceId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      - description: tenant
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete iam resource
      tags:
      - iam-resource
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: typeId
        in: path
        name: typeId
        required: true
        type: string
      - description: resourceId
        in: path
        name: resourceId
        required: true
        type: string
      - description: tenant
        in: body
        name: iamBody
        required: true
        schema:
          $ref: '#/definitions/model.Resource'
      responses:
        "200":
          description: OK
      summary: update iam resource name
      tags:
      - iam-resource
  /accounts/{tenant}/iam/clients/{client}/types/{typeId}/resources/{resourceId}/actions/{actionId}/users/{user}:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      - description: tenant
        in: path
        name: resourceId
        required: true
        type: string
      - description: tenant
        in: path
        name: actionId
        required: true
        type: string
      - description: tenant
        in: path
        name: user
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 用户是否拥有操作某个资源的权限
      tags:
      - iam-action
  /accounts/{tenant}/iam/clients/{client}/types/{typeId}/resources/{resourceId}/roles/{roleId}/users:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      - description: tenant
        in: path
        name: roleId
        required: true
        type: string
      - description: tenant
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取某个资源下某个角色的所有用户列表
      tags:
      - iam-role
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      - description: tenant
        in: path
        name: roleId
        required: true
        type: string
      - description: tenant
        in: path
        name: resourceId
        required: true
        type: string
      - description: tenant
        in: body
        name: iamBody
        required: true
        schema:
          items:
            $ref: '#/definitions/model.ResourceRoleUser'
          type: array
      responses:
        "200":
          description: OK
      summary: new iam resource role
      tags:
      - iam-role
  /accounts/{tenant}/iam/clients/{client}/types/{typeId}/resources/{resourceId}/roles/{roleId}/users/{userId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      - description: tenant
        in: path
        name: resourceId
        required: true
        type: string
      - description: tenant
        in: path
        name: roleId
        required: true
        type: string
      - description: tenant
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete iam resource role
      tags:
      - iam-role
  /accounts/{tenant}/iam/clients/{client}/types/{typeId}/resources/{resourceId}/users:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      - description: tenant
        in: path
        name: resourceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取某个资源下所有用户列表
      tags:
      - iam-action
  /accounts/{tenant}/iam/clients/{client}/types/{typeId}/roles:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: type id
        in: path
        name: typeId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取角色列表
      tags:
      - iam-role
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      - description: tenant
        in: body
        name: iamBody
        required: true
        schema:
          $ref: '#/definitions/model.ResourceTypeRole'
      responses:
        "200":
          description: OK
      summary: new iam role
      tags:
      - iam-role
  /accounts/{tenant}/iam/clients/{client}/types/{typeId}/roles/{roleId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      - description: tenant
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete iam role
      tags:
      - iam-role
  /accounts/{tenant}/iam/clients/{client}/types/{typeId}/roles/{roleId}/actions:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      - description: tenant
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get iam role action list
      tags:
      - iam-action
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      - description: tenant
        in: path
        name: roleId
        required: true
        type: string
      - description: tenant
        in: body
        name: iamBody
        required: true
        schema:
          items:
            $ref: '#/definitions/model.ResourceTypeRoleAction'
          type: array
      responses:
        "200":
          description: OK
      summary: new iam role action
      tags:
      - iam-action
  /accounts/{tenant}/iam/clients/{client}/types/{typeId}/roles/{roleId}/actions/{actionId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: tenant
        in: path
        name: typeId
        required: true
        type: string
      - description: tenant
        in: path
        name: roleId
        required: true
        type: string
      - description: tenant
        in: path
        name: actionId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete iam role action
      tags:
      - iam-action
  /accounts/{tenant}/iam/clients/{client}/types/{typeId}/roles/{roleId}/auth:
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client
        in: path
        name: client
        required: true
        type: string
      - description: type id
        in: path
        name: typeId
        required: true
        type: string
      - description: role id
        in: path
        name: roleId
        required: true
        type: string
      - description: client user id
        in: body
        name: bd
        required: true
        schema:
          items:
            type: integer
          type: array
      responses:
        "200":
          description: OK
      summary: 授权一类资源给用户
      tags:
      - iam-role
  /accounts/{tenant}/login:
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: username
        in: formData
        name: login
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      - description: next
        in: query
        name: next
        type: string
      responses:
        "302":
          description: Found
      summary: login using username and password
      tags:
      - login
  /accounts/{tenant}/login/proto/{fileName}:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: fileName
        in: path
        name: fileName
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: logout current user
      tags:
      - login
  /accounts/{tenant}/logout:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: logout current user
      tags:
      - login
  /accounts/{tenant}/me:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserDto'
      summary: get user
      tags:
      - user
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserDto'
      summary: update user
      tags:
      - user
  /accounts/{tenant}/me/profile:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserProfileDto'
      summary: get user profile
      tags:
      - user
  /accounts/{tenant}/message/{msgId}:
    put:
      parameters:
      - description: tenant name
        in: path
        name: tenant
        required: true
        type: string
      - description: msg id
        in: path
        name: msgId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: mark message read
      tags:
      - msg
  /accounts/{tenant}/message/{providerId}:
    post:
      parameters:
      - description: tenant name
        in: path
        name: tenant
        required: true
        type: string
      - description: provider id
        in: path
        name: providerId
        required: true
        type: integer
      - description: msg body
        in: body
        name: by
        required: true
        schema:
          $ref: '#/definitions/model.SendInfo'
      responses:
        "200":
          description: OK
      summary: send message
      tags:
      - msg
  /accounts/{tenant}/message/{subId}:
    get:
      parameters:
      - description: sub id
        in: path
        name: subId
        required: true
        type: integer
      - description: pageNum
        in: query
        name: page
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        type: integer
      responses:
        "200":
          description: OK
      summary: get message
      tags:
      - msg
  /accounts/{tenant}/oauth2/auth:
    get:
      parameters:
      - description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: client_id
        in: query
        name: client_id
        required: true
        type: string
      - description: scope
        in: query
        name: scope
        required: true
        type: string
      - description: response_type
        in: query
        name: response_type
        required: true
        type: string
      - description: redirect_uri
        in: query
        name: redirect_uri
        required: true
        type: string
      - description: state
        in: query
        name: state
        type: string
      - description: nonce
        in: query
        name: nonce
        type: string
      responses:
        "200":
          description: OK
        "302":
          description: Found
      summary: oauth2 authorize
      tags:
      - oauth2
  /accounts/{tenant}/oauth2/device/code:
    post:
      parameters:
      - description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: query
        name: client_id
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete device groups
      tags:
      - oauth2
  /accounts/{tenant}/oauth2/token:
    get:
      parameters:
      - description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: client_id
        in: query
        name: client_id
        required: true
        type: string
      - description: client_secret
        in: query
        name: client_secret
        type: string
      - description: code
        in: query
        name: code
        type: string
      - description: grant_type
        in: query
        name: grant_type
        required: true
        type: string
      - description: redirect_uri
        in: query
        name: redirect_uri
        type: string
      - description: state
        in: query
        name: state
        type: string
      - description: nonce
        in: query
        name: nonce
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AccessTokenDto'
      summary: oauth2 token
      tags:
      - oauth2
  /accounts/{tenant}/providers:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ProviderDto'
            type: array
      summary: List all providers
      tags:
      - login
  /accounts/{tenant}/providers/{provider}:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: provider
        in: path
        name: provider
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProviderDto'
      summary: get a login provider
      tags:
      - login
  /accounts/{tenant}/providers/{provider}/login:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: provider
        in: path
        name: provider
        required: true
        type: string
      - description: phone
        in: query
        name: phone
        type: string
      - description: next
        in: query
        name: next
        type: string
      - description: callback url
        in: query
        name: callback
        type: string
      responses:
        "302":
          description: Found
      summary: login via a provider
      tags:
      - login
  /accounts/{tenant}/register:
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: username
        in: formData
        name: login
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: register using username and password
      tags:
      - login
  /accounts/{tenant}/reset/getResetPasswordToken:
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: code
        in: formData
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get reset password token
      tags:
      - reset
  /accounts/{tenant}/reset/resetPassword:
    post:
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: new password
        in: formData
        name: newPassword
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: reset password
      tags:
      - reset
  /accounts/{tenant}/reset/smsAvailable:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: check sms available
      tags:
      - reset
  /accounts/{tenant}/reset/verifyResetPasswordRequest:
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: verify method
        in: formData
        name: verifyMethod
        required: true
        type: string
      - description: pass code payload
        in: formData
        name: passCodePayload
        required: true
        type: string
      - default: "+86"
        description: area code
        in: formData
        name: areaCode
        type: string
      responses:
        "200":
          description: OK
      summary: forgot password
      tags:
      - reset
  /accounts/{tenant}/unreadMsgCount/{subId}:
    get:
      parameters:
      - description: sub id
        in: path
        name: subId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get unread message count
      tags:
      - msg
  /accounts/admin/{tenant}/clients:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get client list
      tags:
      - client
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: '{'
        in: body
        name: name
        required: true
        schema:
          type: object
      responses:
        "200":
          description: OK
      summary: new client
      tags:
      - client
  /accounts/admin/{tenant}/clients/{clientId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: clientId
        in: path
        name: clientId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete client
      tags:
      - client
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: clientId
        in: path
        name: clientId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get client
      tags:
      - client
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: clientId
        in: path
        name: clientId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: update client
      tags:
      - client
  /accounts/admin/{tenant}/clients/{clientId}/redirect-uris:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: clientId
        in: path
        name: clientId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get client redirect uris
      tags:
      - client
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: clientId
        in: path
        name: clientId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: new client redirect uri
      tags:
      - client
  /accounts/admin/{tenant}/clients/{clientId}/redirect-uris/{uriId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: clientId
        in: path
        name: clientId
        required: true
        type: string
      - description: tenant
        in: path
        name: uriId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: delete client redirect uris
      tags:
      - client
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: clientId
        in: path
        name: clientId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: new client redirect uri
      tags:
      - client
  /accounts/admin/{tenant}/clients/{clientId}/secret/{secretId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: clientId
        in: path
        name: clientId
        required: true
        type: string
      - description: tenant
        in: path
        name: secretId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: delete client secret
      tags:
      - client
  /accounts/admin/{tenant}/clients/{clientId}/secrets:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: clientId
        in: path
        name: clientId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get client secrets
      tags:
      - client
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: clientId
        in: path
        name: clientId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: new client secret
      tags:
      - client
  /accounts/admin/{tenant}/clients/{clientId}/users:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client id
        in: path
        name: clientId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get client user list
      tags:
      - client-user
  /accounts/admin/{tenant}/clients/{clientId}/users/{subId}:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client id
        in: path
        name: clientId
        required: true
        type: string
      - description: subId
        in: path
        name: subId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get client user list
      tags:
      - client-user
  /accounts/admin/{tenant}/clients/{clientId}/users/{subId}/meta:
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client id
        in: path
        name: clientId
        required: true
        type: string
      - description: sub id
        in: path
        name: subId
        required: true
        type: string
      - description: user body
        in: body
        name: bd
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      summary: update user
      tags:
      - client-user
  /accounts/admin/{tenant}/clients/{clientId}/users/{subId}/password:
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client id
        in: path
        name: clientId
        required: true
        type: string
      - description: sub id
        in: path
        name: subId
        required: true
        type: string
      - description: user body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/admin.ModifyPassword'
      responses:
        "200":
          description: OK
      summary: update user
      tags:
      - client-user
  /accounts/admin/{tenant}/clients/{clientId}/users/{subId}/profile:
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - default: default
        description: client id
        in: path
        name: clientId
        required: true
        type: string
      - description: sub id
        in: path
        name: subId
        required: true
        type: string
      - description: user body
        in: body
        name: bd
        required: true
        schema:
          $ref: '#/definitions/dto.UserAdminDto'
      responses:
        "200":
          description: OK
      summary: update user
      tags:
      - client-user
  /accounts/admin/{tenant}/clients/default:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get client
      tags:
      - client
  /accounts/admin/{tenant}/devices:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: list device
      tags:
      - device
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: new device
      tags:
      - device
  /accounts/admin/{tenant}/devices/{deviceId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: deviceId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: delete device
      tags:
      - device
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: deviceId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get device
      tags:
      - device
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: deviceId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: update device
      tags:
      - device
  /accounts/admin/{tenant}/devices/{deviceId}/groups:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: deviceId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: list device groups
      tags:
      - device
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: deviceId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: new device groups
      tags:
      - device
  /accounts/admin/{tenant}/devices/{deviceId}/groups/{groupId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: deviceId
        required: true
        type: integer
      - description: tenant
        in: path
        name: groupId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: delete device groups
      tags:
      - device
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: deviceId
        required: true
        type: integer
      - description: tenant
        in: path
        name: groupId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: update device groups
      tags:
      - device
  /accounts/admin/{tenant}/devices/{deviceId}/secrets:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: clientId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get client secrets
      tags:
      - client
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: clientId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get client secrets
      tags:
      - client
  /accounts/admin/{tenant}/devices/{deviceId}/secrets/{secretId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: clientId
        required: true
        type: integer
      - description: tenant
        in: path
        name: secretId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get client secrets
      tags:
      - client
  /accounts/admin/{tenant}/devices/code/{userCode}:
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: userCode
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: delete device groups
      tags:
      - device
  /accounts/admin/{tenant}/groups:
    get:
      parameters:
      - description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: list groups
      tags:
      - group
    post:
      parameters:
      - description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: new groups
      tags:
      - group
  /accounts/admin/{tenant}/groups/{groupId}:
    delete:
      parameters:
      - description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: groupId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: delete groups
      tags:
      - group
    get:
      parameters:
      - description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: groupId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get groups
      tags:
      - group
    put:
      parameters:
      - description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: groupId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: update groups
      tags:
      - group
  /accounts/admin/{tenant}/groups/{groupId}/member:
    get:
      parameters:
      - description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: groupId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get groups members
      tags:
      - group
  /accounts/admin/{tenant}/page/login:
    get:
      parameters:
      - default: default
        description: 租户
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get tenant login page
      tags:
      - tenant-meta
    put:
      parameters:
      - default: default
        description: 租户名
        in: path
        name: tenant
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          type: object
      responses:
        "200":
          description: OK
      summary: update tenant login page
      tags:
      - tenant-meta
  /accounts/admin/{tenant}/picture/{type}/upload:
    put:
      parameters:
      - default: default
        description: 租户名
        in: path
        name: tenant
        required: true
        type: string
      - default: logo
        description: 图片类型(background|logo)
        in: path
        name: type
        required: true
        type: string
      - description: 文件
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: OK
      summary: 上传图片
      tags:
      - tenant-meta
  /accounts/admin/{tenant}/proto:
    get:
      parameters:
      - default: default
        description: 租户
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: 获取用户隐私协议
      tags:
      - tenant-meta
    put:
      parameters:
      - default: default
        description: 租户名
        in: path
        name: tenant
        required: true
        type: string
      - description: body
        in: body
        name: bd
        required: true
        schema:
          items:
            type: object
          type: array
      responses:
        "200":
          description: OK
      summary: update tenant login page
      tags:
      - tenant-meta
  /accounts/admin/{tenant}/providers:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: list provider
      tags:
      - provider
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: body
        in: body
        name: req
        required: true
        schema:
          type: object
      responses:
        "200":
          description: OK
      summary: new provider
      tags:
      - provider
  /accounts/admin/{tenant}/providers/{providerId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: providerId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: delete provider
      tags:
      - provider
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: providerId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get provider
      tags:
      - provider
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: providerId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: update provider
      tags:
      - provider
  /accounts/admin/{tenant}/providers/{providerId}/users:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: provider id
        in: path
        name: providerId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get provider user list
      tags:
      - provider
  /accounts/admin/{tenant}/sms:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: list sms
      tags:
      - sms
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/req.Sms'
      responses:
        "200":
          description: OK
      summary: new sms
      tags:
      - sms
  /accounts/admin/{tenant}/sms/{smsId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: sms id
        in: path
        name: smsId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: delete sms
      tags:
      - sms
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: sms id
        in: path
        name: smsId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get sms
      tags:
      - sms
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: sms id
        in: path
        name: smsId
        required: true
        type: integer
      - description: body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/req.Sms'
      responses:
        "200":
          description: OK
      summary: update sms
      tags:
      - sms
  /accounts/admin/{tenant}/users:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: get user list
      tags:
      - user
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: user body
        in: body
        name: bd
        required: true
        schema:
          type: object
      responses:
        "200":
          description: OK
      summary: new user
      tags:
      - user
  /accounts/admin/{tenant}/users/{userId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: delete user
      tags:
      - user
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get user
      tags:
      - user
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: update user
      tags:
      - user
  /accounts/admin/{tenant}/users/{userId}/groups:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get user groups
      tags:
      - user
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get user groups
      tags:
      - user
  /accounts/admin/{tenant}/users/{userId}/groups/{groupId}:
    delete:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: userId
        required: true
        type: integer
      - description: tenant
        in: path
        name: groupId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: update user groups
      tags:
      - user
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: tenant
        in: path
        name: userId
        required: true
        type: integer
      - description: tenant
        in: path
        name: groupId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: update user groups
      tags:
      - user
  /accounts/admin/{tenant}/users/{userId}/password:
    put:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: user id
        in: path
        name: userId
        required: true
        type: integer
      - description: password body
        in: body
        name: pwd
        required: true
        schema:
          type: object
      responses:
        "200":
          description: OK
      summary: update user
      tags:
      - user
  /accounts/admin/{tenant}/users/from:
    post:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: user body
        in: body
        name: bd
        required: true
        schema:
          type: object
      responses:
        "200":
          description: OK
      summary: mark user from
      tags:
      - user
  /accounts/admin/tenants:
    get:
      responses:
        "200":
          description: OK
      summary: list tenants
      tags:
      - admin-tenants
    post:
      responses:
        "200":
          description: OK
      summary: new tenants
      tags:
      - admin-tenants
  /accounts/admin/tenants/{tenantId}:
    delete:
      parameters:
      - description: tenant
        in: path
        name: tenantId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: delete tenants
      tags:
      - admin-tenants
    get:
      parameters:
      - description: tenant
        in: path
        name: tenantId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: get tenants
      tags:
      - admin-tenants
    put:
      parameters:
      - description: tenant
        in: path
        name: tenantId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: update tenants
      tags:
      - admin-tenants
  /accounts/admin/tenants/{tenantId}/secrets:
    post:
      parameters:
      - description: tenant
        in: path
        name: tenantId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: delete tenants
      tags:
      - admin-tenants
  /accounts/admin/tenants/{tenantId}/secrets/{secretId}:
    delete:
      parameters:
      - description: tenant
        in: path
        name: tenantId
        required: true
        type: integer
      - description: tenant
        in: path
        name: secretId
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: delete tenants
      tags:
      - admin-tenants
  /accounts/login/providers/callback:
    get:
      parameters:
      - default: default
        description: tenant
        in: path
        name: tenant
        required: true
        type: string
      - description: code
        in: query
        name: code
        required: true
        type: string
      - description: state
        in: query
        name: state
        type: string
      - description: phone
        in: query
        name: phone
        type: string
      responses:
        "200":
          description: OK
      summary: provider callback
      tags:
      - login
swagger: "2.0"
