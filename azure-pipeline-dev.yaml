trigger:
  - develop

name: $(SourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)

stages:
  - stage: build
    jobs:
      - job: docker
        pool:
          vmImage: ubuntu-latest
        steps:
          - publish: $(System.DefaultWorkingDirectory)/develop.yaml
            artifact: DeployDevelop
          - task: Docker@2
            inputs:
              containerRegistry: 'acr'
              repository: 'iot/accounts'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'
              tags: $(Build.BuildNumber)
  - stage: deploy
    jobs:
      - deployment: kubernetes
        environment: 'development'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: DeployDevelop
                - script: sed -i "s/qixindev.azurecr.io\/iot\/accounts:[a-zA-Z]*[_]*[a-zA-Z]*-[0-9]*[.][0-9]*/qixindev.azurecr.io\/iot\/accounts:$(Build.BuildNumber)/g" $(Pipeline.Workspace)/DeployDevelop/develop.yaml
                - task: Kubernetes@1
                  inputs:
                    connectionType: 'Kubernetes Service Connection'
                    kubernetesServiceEndpoint: 'aks-dev'
                    namespace: 'default'
                    command: 'apply'
                    arguments: '-f $(Pipeline.Workspace)/DeployDevelop/develop.yaml'
                    secretType: 'dockerRegistry'
                    containerRegistryType: 'Azure Container Registry'
